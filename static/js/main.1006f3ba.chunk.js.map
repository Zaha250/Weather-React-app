{"version":3,"sources":["components/SearchCity/SearchCity.js","components/Weather/Weather.js","components/Location/Location.js","components/Spinner/Spinner.js","components/ErrorMessage/warning.svg","components/ErrorMessage/ErrorMessage.js","App.js","index.js"],"names":["SearchCity","props","inputRef","React","createRef","this","current","focus","value","handleChange","updateWeather","onSubmit","id","className","type","placeholder","onChange","ref","Component","Weather","temp","si","icon","toggleSi","src","alt","onClick","Location","city","country","Spinner","ErrorMessage","imgError","App","useState","query","setQuery","weather","setWeather","load","setLoad","setSi","error","setError","api","sendData","fetch","then","res","json","data","catch","onError","useEffect","checkData","main","Math","round","body","name","sys","e","preventDefault","target","ReactDOM","render","document","getElementById"],"mappings":"mWAiCeA,E,kDA7Bb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,SAAWC,IAAMC,YAFL,E,qDAKnB,WACEC,KAAKH,SAASI,QAAQC,U,oBAGxB,WAAU,IAAD,EACwCF,KAAKJ,MAA5CO,EADD,EACCA,MAAOC,EADR,EACQA,aAAcC,EADtB,EACsBA,cAE7B,OACE,sBAAMC,SAAUD,EAAeE,GAAG,SAAlC,SACE,qBAAKC,UAAU,6BAAf,SACE,uBACEA,UAAU,oBACVC,KAAK,OACLN,MAAOA,EACPO,YAAY,4EACZC,SAAUP,EACVQ,IAAKZ,KAAKH,mB,GAtBGC,IAAMe,WCiBhBC,G,MAjBC,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,GAAKC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAClC,OACE,sBAAKV,UAAU,uBAAf,UACE,qBACEW,IAAG,2CAAsCF,EAAtC,QACHG,IAAI,iBAEN,qBACEZ,UAAU,gBACVa,QAASH,EAFX,UAIGH,EAJH,OAIUC,UCFDM,G,MATE,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QACvB,OACE,sBAAKhB,UAAU,yBAAf,UACE,oBAAIA,UAAU,iBAAd,SAAgCe,IAChC,sBAAMf,UAAU,oBAAhB,SAAqCgB,SCA5BC,G,MALC,WACd,OACE,qBAAKjB,UAAU,SAAf,0BCJW,G,MAAA,IAA0B,qCCa1BkB,EATM,WACnB,OACE,sBAAKlB,UAAU,cAAf,UACE,qBAAKA,UAAU,YAAYW,IAAKQ,EAAUP,IAAI,YAC9C,uICkFSQ,G,MAlFH,WAAO,IAAD,EACUC,mBAAS,cADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGQJ,oBAAS,GAHjB,mBAGTK,EAHS,KAGHC,EAHG,OAIIN,oBAAS,GAJb,mBAITb,EAJS,KAILoB,EAJK,OAKUP,oBAAS,GALnB,mBAKTQ,EALS,KAKFC,EALE,KAOVC,EACE,2CADFA,EAEC,mCAGDC,EAAW,WACfL,GAAQ,GACRM,MAAM,GAAD,OAAIF,EAAJ,qBAAyBT,EAAzB,kBAAwCS,IAC1CG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJZ,EAAWY,GACXd,EAAS,IACTI,GAAQ,MAETW,MAAMC,IAQXC,qBAAU,WACRR,MACC,IAEH,IAAMO,EAAU,WACdT,GAAS,IAYLW,EAAoC,oBAAhBjB,EAAQkB,KAE5BnC,EAAOkC,EAAYE,KAAKC,MAAMpB,EAAQkB,KAAKnC,MAAQ,KAEnDsC,EAAOnB,EAAO,cAAC,EAAD,IAClBe,EACE,qCACE,cAAC,EAAD,CACE1B,KAAMS,EAAQsB,KACd9B,QAASQ,EAAQuB,IAAI/B,UAEvB,cAAC,EAAD,CACET,KAAMC,EAAKD,EAAO,IAAMA,EACxBC,GAAIA,EAAK,SAAM,IACfC,KAAMe,EAAQA,QAAQ,GAAGf,KACzBC,SApBS,WACfkB,GAAM,SAAApB,GAAE,OAAKA,WAsBR,GAGP,OACE,sBAAKR,UAAU,MAAf,UACE,cAAC,EAAD,CACEH,cA9CgB,SAACmD,GACrBA,EAAEC,iBACFjB,KA6CIpC,aAlCe,SAACoD,GACpBzB,EAASyB,EAAEE,OAAOvD,QAkCdA,MAAO2B,IAERO,EACG,cAAC,EAAD,IACCgB,OC/EXM,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1006f3ba.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SearchCity.scss';\r\n\r\nclass SearchCity extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.inputRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.inputRef.current.focus();\r\n  }\r\n\r\n  render() {\r\n    const { value, handleChange, updateWeather } = this.props;\r\n\r\n    return (\r\n      <form onSubmit={updateWeather} id=\"search\">\r\n        <div className=\"search-box app__search-box\">\r\n          <input\r\n            className=\"search-box__input\"\r\n            type=\"text\"\r\n            value={value}\r\n            placeholder=\"Введите город\"\r\n            onChange={handleChange}\r\n            ref={this.inputRef}\r\n          />\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchCity;","import React from 'react';\r\nimport './Weather.scss'\r\n\r\nconst Weather = ({ temp, si,  icon, toggleSi }) => {\r\n  return(\r\n    <div className=\"weather app__weather\">\r\n      <img \r\n        src={`https://openweathermap.org/img/w/${icon}.png`}\r\n        alt=\"weather-icon\"\r\n      />\r\n      <h4 \r\n        className=\"weather__temp\"\r\n        onClick={toggleSi}\r\n      >\r\n        {temp}°{si}\r\n      </h4>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Weather;","import React from 'react';\r\nimport './Location.scss';\r\n\r\nconst Location = ({city, country}) => {\r\n  return (\r\n    <div className=\"location app__location\">\r\n      <h1 className=\"location__city\">{city}</h1>\r\n      <span className=\"location__country\">{country}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Location;","import './Spinner.scss';\r\n\r\nconst Spinner = () => {\r\n  return(\r\n    <div className=\"loader\">Loading...</div>\r\n  )\r\n}\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/warning.f612e774.svg\";","import React from 'react';\r\nimport './ErrorMessage.css';\r\nimport imgError from './warning.svg';\r\n\r\nconst ErrorMessage = () => {\r\n  return(\r\n    <div className=\"error-block\">\r\n      <img className=\"error-img\" src={imgError} alt=\"Error..\"></img>\r\n      <h5>Что-то пошло не так...</h5>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage;\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\nimport SearchCity from './components/SearchCity/SearchCity';\nimport Weather from './components/Weather/Weather';\nimport Location from './components/Location/Location';\nimport Spinner from './components/Spinner/Spinner';\nimport ErrorMessage from './components/ErrorMessage/ErrorMessage';\nimport './App.scss';\n\nconst App = () => {\n  const [query, setQuery] = useState('Khabarovsk');\n  const [weather, setWeather] = useState({});\n  const [load, setLoad] = useState(false);\n  const [si, setSi] = useState(true);\n  const [error, setError] = useState(false);\n\n  const api = {\n    base: 'https://api.openweathermap.org/data/2.5/',\n    key: '595ffba442e3dbbf8381455946e286cd'\n  }\n\n  const sendData = () => {\n    setLoad(true);\n    fetch(`${api.base}weather?q=${query}&appid=${api.key}`)\n      .then(res => res.json())\n      .then(data => {\n        setWeather(data);\n        setQuery('');\n        setLoad(false);\n      })\n      .catch(onError)\n  }\n\n  const updateWeather = (e) => {\n    e.preventDefault();\n    sendData();\n  }\n\n  useEffect(() => {\n    sendData();\n  }, [])\n\n  const onError = () => {\n    setError(true);\n  }\n\n  const handleChange = (e) => {\n    setQuery(e.target.value);\n  }\n\n  const toggleSi = () => {\n    setSi(si => !si);\n  }\n\n  //Получены ли данные\n  const checkData = (typeof weather.main != 'undefined');\n\n  const temp = checkData ? Math.round(weather.main.temp) : null;\n\n  const body = load ? <Spinner /> : (\n    checkData ? (\n      <>\n        <Location\n          city={weather.name}\n          country={weather.sys.country}\n        />\n        <Weather\n          temp={si ? temp - 273 : temp}\n          si={si ? 'С' : 'K'}\n          icon={weather.weather[0].icon}\n          toggleSi={toggleSi}\n        />\n      </>\n    ) : ('')\n  )\n\n  return (\n    <div className=\"App\">\n      <SearchCity \n        updateWeather={updateWeather}\n        handleChange={handleChange}\n        value={query}\n      />\n      {error \n        ? <ErrorMessage />\n        :  body \n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}