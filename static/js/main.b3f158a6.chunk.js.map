{"version":3,"sources":["components/SearchCity/SearchCity.js","components/Weather/Weather.js","components/Location/Location.js","components/Spinner/Spinner.js","App.js","index.js"],"names":["SearchCity","value","handleChange","updateWeather","onSubmit","id","className","type","placeholder","onChange","Weather","temp","si","icon","toggleSi","src","alt","onClick","Location","city","country","Spinner","class","App","useState","query","setQuery","weather","setWeather","load","setLoad","setSi","api","checkData","main","Math","round","body","name","sys","e","preventDefault","fetch","then","res","json","data","target","ReactDOM","render","document","getElementById"],"mappings":"uSAmBeA,EAhBI,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,cACzC,OACE,sBAAMC,SAAUD,EAAeE,GAAG,SAAlC,SACE,qBAAKC,UAAU,6BAAf,SACE,uBACEA,UAAU,oBACVC,KAAK,OACLN,MAAOA,EACPO,YAAY,4EACZC,SAAUP,SCQLQ,G,MAjBC,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,GAAKC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAClC,OACE,sBAAKR,UAAU,uBAAf,UACE,qBACES,IAAG,2CAAsCF,EAAtC,QACHG,IAAI,iBAEN,qBACEV,UAAU,gBACVW,QAASH,EAFX,UAIGH,EAJH,OAIUC,UCFDM,G,MATE,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QACvB,OACE,sBAAKd,UAAU,yBAAf,UACE,oBAAIA,UAAU,iBAAd,SAAgCa,IAChC,sBAAMb,UAAU,oBAAhB,SAAqCc,SCA5BC,G,MALC,WACd,OACE,qBAAKC,MAAM,SAAX,0BCqEWC,G,MAlEH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGQJ,oBAAS,GAHjB,mBAGTK,EAHS,KAGHC,EAHG,OAIIN,oBAAS,GAJb,mBAITZ,EAJS,KAILmB,EAJK,KAMVC,EACE,2CADFA,EAEC,mCAyBDC,EAAoC,oBAAhBN,EAAQO,KAE5BvB,EAAOsB,EAAYE,KAAKC,MAAMT,EAAQO,KAAKvB,MAAQ,KAEnD0B,EAAOR,EAAO,cAAC,EAAD,IAClBI,EACE,qCACE,cAAC,EAAD,CACEd,KAAMQ,EAAQW,KACdlB,QAASO,EAAQY,IAAInB,UAEvB,cAAC,EAAD,CACET,KAAMC,EAAKD,EAAO,IAAMA,EACxBC,GAAIA,EAAK,SAAM,IACfC,KAAMc,EAAQA,QAAQ,GAAGd,KACzBC,SApBS,WACfiB,GAAM,SAAAnB,GAAE,OAAKA,WAsBR,GAGP,OACE,sBAAKN,UAAU,MAAf,UACE,cAAC,EAAD,CACEH,cA9CgB,SAACqC,GACrBA,EAAEC,iBACFX,GAAQ,GAERY,MAAM,GAAD,OAAIV,EAAJ,qBAAyBP,EAAzB,kBAAwCO,IAC1CW,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJlB,EAAWkB,GACXpB,EAAS,IACTI,GAAQ,OAsCR5B,aAlCe,SAACsC,GACpBd,EAASc,EAAEO,OAAO9C,QAkCdA,MAAOwB,IAERY,OC/DPW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b3f158a6.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SearchCity.scss';\r\n\r\nconst SearchCity = ({ value, handleChange, updateWeather }) => {\r\n  return(\r\n    <form onSubmit={updateWeather} id=\"search\">\r\n      <div className=\"search-box app__search-box\">\r\n        <input \r\n          className=\"search-box__input\"\r\n          type=\"text\"\r\n          value={value}\r\n          placeholder=\"Введите город\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default SearchCity;","import React from 'react';\r\nimport './Weather.scss'\r\n\r\nconst Weather = ({ temp, si,  icon, toggleSi }) => {\r\n  return(\r\n    <div className=\"weather app__weather\">\r\n      <img \r\n        src={`https://openweathermap.org/img/w/${icon}.png`}\r\n        alt=\"weather-icon\"\r\n      />\r\n      <h4 \r\n        className=\"weather__temp\"\r\n        onClick={toggleSi}\r\n      >\r\n        {temp}°{si}\r\n      </h4>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Weather;","import React from 'react';\r\nimport './Location.scss';\r\n\r\nconst Location = ({city, country}) => {\r\n  return (\r\n    <div className=\"location app__location\">\r\n      <h1 className=\"location__city\">{city}</h1>\r\n      <span className=\"location__country\">{country}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Location;","import './Spinner.scss';\r\n\r\nconst Spinner = () => {\r\n  return(\r\n    <div class=\"loader\">Loading...</div>\r\n  )\r\n}\r\nexport default Spinner;","import React, { useState } from 'react';\nimport SearchCity from './components/SearchCity/SearchCity';\nimport Weather from './components/Weather/Weather';\nimport Location from './components/Location/Location';\nimport Spinner from './components/Spinner/Spinner';\nimport './App.scss';\n\nconst App = () => {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const [load, setLoad] = useState(false);\n  const [si, setSi] = useState(true);\n\n  const api = {\n    base: 'https://api.openweathermap.org/data/2.5/',\n    key: '595ffba442e3dbbf8381455946e286cd'\n  }\n\n  const updateWeather = (e) => {\n    e.preventDefault();\n    setLoad(true);\n\n    fetch(`${api.base}weather?q=${query}&appid=${api.key}`)\n      .then(res => res.json())\n      .then(data => {\n        setWeather(data);\n        setQuery('');\n        setLoad(false);\n      })\n  }\n\n  const handleChange = (e) => {\n    setQuery(e.target.value);\n  }\n\n  const toggleSi = () => {\n    setSi(si => !si);\n  }\n\n  //Получены ли данные\n  const checkData = (typeof weather.main != 'undefined');\n\n  const temp = checkData ? Math.round(weather.main.temp) : null;\n\n  const body = load ? <Spinner /> : (\n    checkData ? (\n      <>\n        <Location\n          city={weather.name}\n          country={weather.sys.country}\n        />\n        <Weather\n          temp={si ? temp - 273 : temp}\n          si={si ? 'С' : 'F'}\n          icon={weather.weather[0].icon}\n          toggleSi={toggleSi}\n        />\n      </>\n    ) : ('')\n  )\n\n  return (\n    <div className=\"App\">\n      <SearchCity \n        updateWeather={updateWeather}\n        handleChange={handleChange}\n        value={query}\n      />\n      {body}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}